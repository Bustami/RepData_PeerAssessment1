TotalNA<-sum(rawdata$steps=="NA")
TotalNA<-sum(is.na(rawdata$steps))
min(DailyAverage)
newdata<-rawdata
for (i in 1:length(DailyAverage))
{
if rawdata[i,1]=="NA"
rawdata[i,1] = DailyAverage[i]
}
for (i in 1:length(DailyAverage))
{
if (newdata[i,1]=="NA")
{
newdata[i,1] = DailyAverage[i]
}
}
str(newdata)
for (i in 1:length(DailyAverage))
{
if (newdata[i,1]==NA)
{
newdata[i,1] = DailyAverage[i]
}
}
View(newdata)
newdata<-rawdata
for (i in 1:length(DailyAverage))
{
if (is.na(newdata[i,1])==T)
{
newdata[i,1] = DailyAverage[i]
}
}
View(newdata)
length(DailyAverage)
newdata<-rawdata
View(newdata)
plot(DailyAverage,type="l",xlab="5 minutes representantive daily interval")
for (i in 1:length(DailyAverage))
{
if (is.na(newdata[i,1])==T)
{
newdata[i,1] = DailyAverage[i]
}
}
TotalSteps2<-tapply(newdata$steps,newdata$date,sum)
mutate(newdata,typeday=weekdays(newdata$date))
library(dplyr)
mutate(newdata,typeday=weekdays(newdata$date))
newdata<-rawdata
for (i in 1:length(DailyAverage))
{
if (is.na(newdata[i,1])==T)
{
newdata[i,1] = DailyAverage[i]
}
}
TotalSteps2<-tapply(newdata$steps,newdata$date,sum)
hist(TotalSteps2,col="blue",main="Total steps taken per day (NA filled)")
Mean2<-mean(TotalSteps2,na.rm=T)
Mean2
Median2<-median(TotalSteps2,na.rm=T)
Median2
library(dplyr)
day<-weekdays(newdata$date)
mutate(newdata,typeday=as.factor(day=="saturday" || day"sunday"))
mutate(newdata,typeday=as.factor(day=="saturday" || day=="sunday"))
tail(newdata)
newdata<-mutate(newdata,typeday=as.factor(day=="saturday" || day=="sunday"))
View(newdata)
tail(newdata)
DailyAverageWD<-tapply(newdata$steps,newdata$interval ~ newdata$typeday
DailyAverageWD<-aggregate(newdata$steps,newdata$interval + newdata$typeday,FUN=mean)
DailyAverageWD<-aggregate(newdata$steps,newdata$interval + newdata$typeday,FUN=mean)
DailyAverageWD<-aggregate(newdata$steps,by=list(newdata$interval, newdata$typeday),FUN="mean")
View(DailyAverageWD)
str(newdata$typeday)
summary(newdata$typeday)
newdata<-mutate(newdata,typeday=which(day=="saturday" || day=="sunday"))
View(newdata)
summary(day)
str(day)
head(day,200)
head(day,2000)
newdata<-mutate(newdata,day=weekdays(newdata$date))
newdata<-rawdata
for (i in 1:length(DailyAverage))
{
if (is.na(newdata[i,1])==T)
{
newdata[i,1] = DailyAverage[i]
}
}
newdata<-mutate(newdata,day=weekdays(newdata$date))
View(newdata)
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$day,FUN="mean")
View(DailyAverageWD)
which(newdata$day=="sabado")
View(newdata)
which(newdata$day=="domingo")
as.factor(which(newdata$day=="domingo"))
newdata<-mutate(newdata,typeday=as.factor(which(newdata$day=="domingo" || "sábado"))
newdata<-mutate(newdata,typeday=as.factor(which(newdata$day=="domingo" || "sábado")))
newdata<-mutate(newdata,typeday=as.factor(which(newdata$day=="domingo" || newdata$day=="sábado")))
x<-as.factor(which(newdata$day=="domingo" ||"sábado"))
x<-as.factor(which(newdata$day=="domingo" || newdata$day=="sábado"))
x<-which(newdata$day=="domingo" || newdata$day=="sábado")
x<-which(newdata$day=="domingo")
newdata[which(newdata$day=="domingo"),5]<-1
View(newdata)
newdata[which(newdata$day=="sábado"),5]<-1
View(newdata)
newdata(1730)
newdata[1730]
newdata[1730,]
newdata[1630,]
newdata[which(c(newdata$day=="domingo",newdata$day=="sábado"),5]<-1
View(newdata)
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
colnames(newdata)[5]<-"typeday"
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
View(DailyAverageWD)
for (i in 1:length(newdata))
{
if (newdata[i,4]=="domingo" || newdata$day[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
for (i in 1:length(newdata))
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
View(newdata)
newdata<-rawdata
newdata<-mutate(newdata,day=weekdays(newdata$date))
for (i in 1:length(newdata)[2])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
for (i in 1:length[2](newdata)
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {
newdata[i,5] = 0
}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {
newdata[i,5] = 0
}
}
clc
clear
clean
cl
pl
clc
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {
newdata[i,5] = 0
}
}
library(dplyr)
newdata<-mutate(newdata,day=weekdays(newdata$date))
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {
newdata[i,5] = 0
}
}
#newdata[which(newdata$day=="domingo"),5]<-1
#newdata[which(newdata$day=="sábado"),5]<-1
colnames(newdata)[5]<-"typeday"
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
plot(DailyAverage,type="l",xlab="5 minutes representantive daily interval")
#g<-qplot(year,Emissions2,data=x7,color=fips)
#gph2 + geom_line()+geom_point(size=3)+labs(y="PM 2.5 %Change Motor vehicles #Emissions")+scale_color_manual(labels = c("LA", "Baltimore"), values = c("blue", "red"))
length(newdata[,1]
length(newdata[,1])
length(newdata[,1])
View(newdata)
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {
newdata[i,5] = 0
}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
}
for (i in 1:length(newdata[,1])
{
if (newdata[i,4]=="domingo" || newdata[i,4]=="sábado")
{
newdata[i,5] = 1
}
else {newdata[i,5] = 0}
}
newdata[,5]<-ifelse(newdata$day=="domingo" || newdata$day=="sábado",1,0)
View(newdata)
colnames(newdata)[5]<-"typeday"
View(newdata)
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
View(DailyAverageWD)
newdata(1730)
newdata(1730,5)
newdata(1730,5)
newdata[1730,5]
newdata[1730,4]
newdata[,5]<-ifelse(newdata$day=="domingo",1,0)
newdata[1730,5]
newdata[,5]<-ifelse(newdata$day=="sábado",1,0)
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
View(DailyAverageWD)
plot(DailyAverageWD[,1],DailyAverageWD[,3]type="l",xlab="5 minutes representantive daily interval")
plot(DailyAverageWD[,1],DailyAverageWD[,3],type="l",xlab="5 minutes representantive daily interval")
plot(DailyAverageWD,type="l",xlab="5 minutes representantive daily interval")
par(mfrow=2)
par(mfrow=c(2,1))
plot(DailyAverageWD,type="l",xlab="5 minutes representantive daily interval")
plot(DailyAverageWD,xlab="5 minutes representantive daily interval")
plot(DailyAverageWD[,1],DailyAverageWD[,3],xlab="5 minutes representantive daily interval")
with(DailyAverageWD, {
plot(newdata$interval, newdata$steps, main = "Ozone and Wind")
plot(newdata$interval, newdata$steps, main = "Ozone and Solar Radiation")
})
library(dplyr)
newdata<-mutate(newdata,day=weekdays(newdata$date))
newdata[,5]<-ifelse(newdata$day=="domingo",1,0)
newdata[,5]<-ifelse(newdata$day=="sábado",1,0)
colnames(newdata)[5]<-"typeday"
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD, facets=.~newdata$typeday)
gg + geom_line()+geom_point(size=1,col=2)+theme(axis.text.x = element_text(angle = 90, size=5))
par(mfrow=c(2,1))
with(DailyAverageWD, {
plot(newdata$interval, newdata$steps, main = "A")
plot(newdata$interval, newdata$steps, main = "B")
})
#g<-qplot(year,Emissions2,data=x7,color=fips)
#gph2 + geom_line()+geom_point(size=3)+labs(y="PM 2.5 %Change Motor vehicles #Emissions")+scale_color_manual(labels = c("LA", "Baltimore"), values = c("blue", "red"))
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD, facets=.~newdata$typeday)
gg + geom_line()+geom_point(size=1,col=2)+theme(axis.text.x = element_text(angle = 90, size=5))
library(ggplot2)
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD, facets=.~newdata$typeday)
gg + geom_line()+geom_point(size=1,col=2)+theme(axis.text.x = element_text(angle = 90, size=5))
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD, facets=.~newdata$typeday)
gg + geom_line()+geom_point(size=1,col=2))
gg + geom_line()+geom_point(size=1,col=2)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
dev.off()
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
dev.off()
par(mfrow=c(2,1))
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
dev.off()
newdata<-rawdata
for (i in 1:length(DailyAverage))
{
if (is.na(newdata[i,1])==T)
{
newdata[i,1] = DailyAverage[i]
}
}
newdata<-mutate(newdata,day=weekdays(newdata$date))
newdata[,5]<-ifelse(newdata$day=="domingo",1,0)
newdata[,5]<-ifelse(newdata$day=="sábado",1,0)
colnames(newdata)[5]<-"typeday"
DailyAverageWD<-aggregate(newdata$steps ~ newdata$interval * newdata$typeday,FUN="mean")
library(ggplot2)
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
dev.off()
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ DailyAverageWD$newdata$typeday,nrow=2,ncol=1)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)+facet_grid(paste(newdata$typeday, "~ ."))
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)+facet_grid(paste(newdata$typeday, "~ ."))
dev.off()
gg + geom_line()+geom_point(size=1,col=2))
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)
dev.off()
gg<-qplot(newdata$interval,newdata$steps,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ newdata$typeday,nrow=2,ncol=1)
dev.off()
gg<-qplot(V1,V3,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ V2,nrow=2,ncol=1)
dev.off()
colnames(DailyAverageWD)[1]<-"V1"
colnames(DailyAverageWD)[2]<-"V2"
colnames(DailyAverageWD)[3]<-"V3"
library(ggplot2)
gg<-qplot(V1,V3,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ DailyAverageWD$V2,nrow=2,ncol=1)
dev.off()
View(DailyAverageWD)
gg<-qplot(V1,V3,data=DailyAverageWD)
gg + geom_line()+geom_point(size=1,col=2)+facet_wrap(~ V2,nrow=2,ncol=1)
dev.off()
View(rawdata)
View(DailyAverageWD)
max(DailyAverageWD[,1])
View(DailyAverageWD)
View(newdata)
View(newdata)
rawdata<-read.csv("activity.csv",sep=",",header=T,stringsAsFactors=F)
rawdata[,2]<-as.Date(rawdata$date,"%Y-%m-%d")
for (i in 1:length(rawdata[,3]))
{
rawdata[,3]<-5*i
}
View(rawdata)
for (i in 1:length(rawdata[,3]))
{
rawdata[i,3]<-5*i
}
View(rawdata)
View(rawdata)
for (i in 1:length(rawdata[,3])/2)
{
rawdata[i,3]<-5*i
rawdata[i+2880,3]<-5*i
if (i==2880)
}
for (i in 1:length(rawdata[,3])/2)
{
rawdata[i,3]<-5*i
rawdata[i+2880,3]<-5*i
}
View(rawdata)
for (i in 1:1:length(rawdata[,3])/2)
{
rawdata[i,3]<-5*i
rawdata[i+2880,3]<-5*i
}
View(rawdata)
for (i in 1:1:length(rawdata[,3])/2)
{
rawdata[i,3]<-5*i
rawdata[i+length(rawdata[,3])/2,3]<-5*i
}
View(rawdata)
rawdata<-read.csv("activity.csv",sep=",",header=T,stringsAsFactors=F)
rawdata[,2]<-as.Date(rawdata$date,"%Y-%m-%d")
View(rawdata)
for (i in 1:1:length(rawdata[,3]))
{
rawdata[i,3]<-5*i
}
View(rawdata)
tail(rawdata)
View(rawdata)
rawdata<-read.csv("activity.csv",sep=",",header=T,stringsAsFactors=F)
rawdata[,2]<-as.Date(rawdata$date,"%Y-%m-%d")
View(rawdata)
for (i in 1:rawdata[,3])
{
rawdata[i*j*288,3]<-5*i
j<-j+1
if (j==288)
{
j<-0
}
}
for (i in 1:rawdata[,3])
{
rawdata[i+j*288,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
j<-0
for (i in 1:rawdata[,3])
{
rawdata[i+j*288,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
rawdata<-read.csv("activity.csv",sep=",",header=T,stringsAsFactors=F)
rawdata[,2]<-as.Date(rawdata$date,"%Y-%m-%d")
j<-0
for (i in 1:rawdata[,3])
{
rawdata[i+j*288,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
j<-0
for (i in 1:rawdata[,3])
{
rawdata[i,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
View(rawdata)
for (i in 1:rawdata[,3])
{
rawdata[i,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
rawdata<-read.csv("activity.csv",sep=",",header=T,stringsAsFactors=F)
rawdata[,2]<-as.Date(rawdata$date,"%Y-%m-%d")
j<-0
for (i in 1:rawdata[,3])
{
rawdata[i,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
j<-0
for (i in 1:length(rawdata[,3]))
{
rawdata[i,3]<-5*j
j<-j+1
if (j==288)
{
j<-0
}
}
View(rawdata)
DailyAverage
View(rawdata)
View(rawdata)
TotalSteps<-tapply(rawdata$steps,rawdata$interval,sum)
hist(TotalSteps,col="red",main="Total steps taken per day")
Mean<-mean(TotalSteps,na.rm=T)
Median<-median(TotalSteps,na.rm=T)
plot(x<-0:5:1435,DailyAverage,type="l",xlab="5 minutes representantive daily interval")
View(DailyAverageWD)
plot(x<-0:1:288,DailyAverage,type="l",xlab="5 minutes representantive daily interval")
plot(x<-0:1:287,DailyAverage,type="l",xlab="5 minutes representantive daily interval")
